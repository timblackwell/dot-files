call plug#begin('~/.vim/plugged')

Plug 'fatih/vim-go'
Plug 'fatih/vim-hclfmt'
Plug 'Shougo/deoplete.nvim'
Plug 'zchee/deoplete-go', { 'do': 'make'}
Plug 'vim-airline/vim-airline'
Plug 'majutsushi/tagbar'
Plug 'scrooloose/nerdtree'
Plug 'fatih/molokai'
Plug 'tpope/vim-fugitive'
Plug 'garyburd/go-explorer'
Plug 'moll/vim-node'
Plug 'AndrewRadev/splitjoin.vim'
Plug 'airblade/vim-gitgutter'

call plug#end()

" general
syntax on
set number
set mouse=a
set autowrite
set laststatus=2
set encoding=utf-8
set clipboard=unnamed

let mapleader = "`"

" colour scheme
let g:rehash256 = 1
let g:molokai_original = 1
colorscheme molokai

" autocomplete
set complete+=kspell
let g:deoplete#enable_at_startup = 1

" nerdtree
map <leader>n  :NERDTreeToggle<CR>
let NERDTreeIgnore = ['\.pyc$', '.DS_STORE']

" quickfix
map <C-n> :cnext<CR>
map <C-m> :cprevious<CR>
nnoremap <leader>a :cclose<CR>

" python
let python_highlight_all=1

" GO
let g:go_fmt_command = "goimports"
let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_operators = 1
let g:go_highlight_extra_types = 1
let g:go_highlight_build_constraints = 1
let g:go_highlight_generate_tags = 1
let g:go_metalinter_enabled = ['vet', 'golint', 'errcheck']
let g:go_metalinter_autosave = 1
let g:go_metalinter_autosave_enabled = ['vet', 'golint']
let g:go_metalinter_deadline = "5s"
let g:go_list_type = "quickfix"

autocmd FileType go nmap <leader>t  <Plug>(go-test)
autocmd FileType go nmap <leader>r  <Plug>(go-run)
autocmd FileType go nmap <Leader>c <Plug>(go-coverage-toggle)

" run :GoBuild or :GoTestCompile based on the go file
function! s:build_go_files()
  let l:file = expand('%')
  if l:file =~# '^\f\+_test\.go$'
    call go#cmd#Test(0, 1)
  elseif l:file =~# '^\f\+\.go$'
    call go#cmd#Build(0)
  endif
endfunction

autocmd FileType go nmap <leader>b :<C-u>call <SID>build_go_files()<CR>
